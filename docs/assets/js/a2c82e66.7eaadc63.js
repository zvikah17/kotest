"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[1648],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),a=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=a(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),b=a(n),d=o,m=b["".concat(l,".").concat(d)]||b[d]||u[d]||i;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var a=2;a<i;a++)c[a]=n[a];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},91585:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return a},toc:function(){return u}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),c=["components"],s={id:"robolectric",title:"Robolectric",sidebar_label:"Robolectric",slug:"robolectric.html"},l=void 0,a={unversionedId:"extensions/robolectric",id:"version-5.3/extensions/robolectric",title:"Robolectric",description:"Robolectric",source:"@site/versioned_docs/version-5.3/extensions/roboelectric.md",sourceDirName:"extensions",slug:"/extensions/robolectric.html",permalink:"/docs/extensions/robolectric.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/versioned_docs/version-5.3/extensions/roboelectric.md",tags:[],version:"5.3",frontMatter:{id:"robolectric",title:"Robolectric",sidebar_label:"Robolectric",slug:"robolectric.html"},sidebar:"extensions",previous:{title:"WireMock",permalink:"/docs/extensions/wiremock.html"},next:{title:"Pitest",permalink:"/docs/extensions/pitest.html"}},p={},u=[{value:"Robolectric",id:"robolectric",level:2}],b={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"robolectric"},"Robolectric"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.kotest.extensions/kotest-extensions-robolectric"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.kotest.extensions/kotest-extensions-robolectric",alt:"Latest Release"}))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://robolectric.org/"},"Robolectric")," can be used with Kotest through the ",(0,i.kt)("inlineCode",{parentName:"p"},"RobolectricExtension")," which can be found in a separate repository,",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kotest/kotest-extensions-robolectric"},"kotest-extensions-robolectric")),(0,i.kt)("p",null,"To add this module to project you need specify following in your ",(0,i.kt)("inlineCode",{parentName:"p"},"build.gradle"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'testImplementation("io.kotest.extensions:kotest-extensions-robolectric:${version}")\n')),(0,i.kt)("p",null,"This dependency brings in ",(0,i.kt)("inlineCode",{parentName:"p"},"RobolectricExtension"),", which is autoregistered to your projects."),(0,i.kt)("p",null,"Now all you need to do is annotate Robolectric specs with ",(0,i.kt)("inlineCode",{parentName:"p"},"@RobolectricTest")," and you're set!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'@RobolectricTest\nclass MyTest : ShouldSpec({\n    should("Access Robolectric normally!") {\n\n    }\n})\n')))}d.isMDXComponent=!0}}]);