"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[1007],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return k}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),d=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),u=d(n),k=a,c=u["".concat(p,".").concat(k)]||u[k]||m[k]||o;return n?r.createElement(c,i(i({ref:e},s),{},{components:n})):r.createElement(c,i({ref:e},s))}));function k(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25245:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return m}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"arrow",title:"Arrow Generators",slug:"property-test-generators-arrow.html",sidebar_label:"Arrow Generators"},p=void 0,d={unversionedId:"proptest/arrow",id:"version-5.2/proptest/arrow",title:"Arrow Generators",description:"Kotest provides an optional module that provides generators for Arrow.",source:"@site/versioned_docs/version-5.2/proptest/arrow.md",sourceDirName:"proptest",slug:"/proptest/property-test-generators-arrow.html",permalink:"/docs/5.2/proptest/property-test-generators-arrow.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/versioned_docs/version-5.2/proptest/arrow.md",tags:[],version:"5.2",frontMatter:{id:"arrow",title:"Arrow Generators",slug:"property-test-generators-arrow.html",sidebar_label:"Arrow Generators"},sidebar:"proptest",previous:{title:"Global Configuration",permalink:"/docs/5.2/proptest/property-test-global-config.html"},next:{title:"Kotlinx DateTime",permalink:"/docs/5.2/proptest/kotlinx-datetime-gens.html"}},s={},m=[],u={toc:m};function k(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Kotest provides an optional module that provides generators for ",(0,o.kt)("a",{parentName:"p",href:"https://arrow-kt.io"},"Arrow"),"."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To use, add ",(0,o.kt)("inlineCode",{parentName:"p"},"io.kotest.extensions:kotest-property-arrow:version"),"and ",(0,o.kt)("inlineCode",{parentName:"p"},"io.arrow-kt:arrow-core:arrow-version")," to your build.\nThis holds true for the optics module ",(0,o.kt)("inlineCode",{parentName:"p"},"kotest-property-arrow-optics"),", by adding ",(0,o.kt)("inlineCode",{parentName:"p"},"io.arrow-kt:arrow-optics:arrow-version"),", too."))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=kotest-property-arrow"},(0,o.kt)("img",{src:"https://img.shields.io/maven-central/v/io.kotest.extensions/kotest-property-arrow?label=latest%20release"}))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Generator"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Either")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.either(arbL, arbR)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates approx 50/50 of left and right from the underlying generators.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.right(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates instances of ","[Either.Right]"," using the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.left(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates instances of ","[Either.Left]"," using the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"NonEmptyList")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.nel(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates NonEmptyList instances with a size randomly choosen between 1 and 100, with elements populated from the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.nel(arb, range)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates NonEmptyList instances with a size randomly chosen from the given range, with elements populated from the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Option")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Exhaustive.option(a)")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an Exhaustive that contains a None and a Some with the given value.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Exhaustive.none(a)")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an Exhaustive that contains None.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.option(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates both None and Some with Some's populated with values from the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.some(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates Some's populated with values from the given arb.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.none()")),(0,o.kt)("td",{parentName:"tr",align:null},"A constant arb that returns None. Equivalent to Exhaustive.None and provided only for use when an Arb is required.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Endo")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.endo(arb)")),(0,o.kt)("td",{parentName:"tr",align:null},"Wraps values from the underlying arb in ",(0,o.kt)("inlineCode",{parentName:"td"},"Endo")," instances.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Eval")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb<A>.evalNow()")),(0,o.kt)("td",{parentName:"tr",align:null},"Wraps values from the receiver in ",(0,o.kt)("inlineCode",{parentName:"td"},"Eval.now"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Validated")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.validated(invalid, valid)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates approx 50/50 of valid and invalid ",(0,o.kt)("inlineCode",{parentName:"td"},"Validated")," instances using the supplied arbs for values")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Arb.validatedNel(invalid, valid)")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates approx 50/50 of valid and invalid ",(0,o.kt)("inlineCode",{parentName:"td"},"ValidatedNel")," instances using the supplied arbs for values")))))}k.isMDXComponent=!0}}]);